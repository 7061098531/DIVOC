// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BookSlotOfFacilityHandlerFunc turns a function with the right signature into a book slot of facility handler
type BookSlotOfFacilityHandlerFunc func(BookSlotOfFacilityParams) middleware.Responder

// Handle executing the request and returning a response
func (fn BookSlotOfFacilityHandlerFunc) Handle(params BookSlotOfFacilityParams) middleware.Responder {
	return fn(params)
}

// BookSlotOfFacilityHandler interface for that can handle valid book slot of facility params
type BookSlotOfFacilityHandler interface {
	Handle(BookSlotOfFacilityParams) middleware.Responder
}

// NewBookSlotOfFacility creates a new http.Handler for the book slot of facility operation
func NewBookSlotOfFacility(ctx *middleware.Context, handler BookSlotOfFacilityHandler) *BookSlotOfFacility {
	return &BookSlotOfFacility{Context: ctx, Handler: handler}
}

/*BookSlotOfFacility swagger:route POST /facility/slot/book bookSlotOfFacility

Book a slot in facility

*/
type BookSlotOfFacility struct {
	Context *middleware.Context
	Handler BookSlotOfFacilityHandler
}

func (o *BookSlotOfFacility) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewBookSlotOfFacilityParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// BookSlotOfFacilityBody book slot of facility body
//
// swagger:model BookSlotOfFacilityBody
type BookSlotOfFacilityBody struct {

	// enrollment code
	EnrollmentCode string `json:"enrollmentCode,omitempty"`

	// facility slot Id
	FacilitySlotID string `json:"facilitySlotId,omitempty"`
}

// Validate validates this book slot of facility body
func (o *BookSlotOfFacilityBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BookSlotOfFacilityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BookSlotOfFacilityBody) UnmarshalBinary(b []byte) error {
	var res BookSlotOfFacilityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
