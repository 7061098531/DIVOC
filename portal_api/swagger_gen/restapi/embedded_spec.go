// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Digital infra for vaccination certificates",
    "title": "Divoc Portal API",
    "version": "1.0.0"
  },
  "host": "divoc.xiv.in",
  "basePath": "/divoc/admin/api/v1",
  "paths": {
    "/facilities": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/medicine": {
      "post": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Create Medicine",
        "operationId": "createMedicine",
        "parameters": [
          {
            "description": "Facility data in the form of csv",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateMedicineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/program": {
      "post": {
        "summary": "Create program",
        "operationId": "createProgram",
        "parameters": [
          {
            "description": "Vaccination Program",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProgramRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/vaccinators": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateMedicineRequest": {
      "type": "object",
      "properties": {
        "effectiveUntil": {
          "description": "Effective until n months after the full vaccination schedule is completed",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "description": "Indicative price if fixed or max price available.",
          "type": "number"
        },
        "provider": {
          "type": "string"
        },
        "schedule": {
          "type": "object",
          "properties": {
            "repeatInterval": {
              "description": "Number of times the vaccination should be taken.",
              "type": "number"
            },
            "repeatTimes": {
              "description": "How many times vaccination should be taken",
              "type": "number"
            }
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive",
            "Blocked"
          ]
        }
      }
    },
    "ProgramRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "logoURL": {
          "type": "string"
        },
        "medicineIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    }
  },
  "securityDefinitions": {
    "hasRole": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "tokenUrl": "https://dumy.oauth.net/token",
      "scopes": {
        "admin": "scope of super admin",
        "facilityAdmin": "scope of facility admin"
      }
    },
    "isAdmin": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "isFacilityAdmin": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "isUser": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "hasRole": [
        "admin"
      ]
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Digital infra for vaccination certificates",
    "title": "Divoc Portal API",
    "version": "1.0.0"
  },
  "host": "divoc.xiv.in",
  "basePath": "/divoc/admin/api/v1",
  "paths": {
    "/facilities": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/medicine": {
      "post": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Create Medicine",
        "operationId": "createMedicine",
        "parameters": [
          {
            "description": "Facility data in the form of csv",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateMedicineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/program": {
      "post": {
        "summary": "Create program",
        "operationId": "createProgram",
        "parameters": [
          {
            "description": "Vaccination Program",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProgramRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/vaccinators": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateMedicineRequest": {
      "type": "object",
      "properties": {
        "effectiveUntil": {
          "description": "Effective until n months after the full vaccination schedule is completed",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "description": "Indicative price if fixed or max price available.",
          "type": "number"
        },
        "provider": {
          "type": "string"
        },
        "schedule": {
          "type": "object",
          "properties": {
            "repeatInterval": {
              "description": "Number of times the vaccination should be taken.",
              "type": "number"
            },
            "repeatTimes": {
              "description": "How many times vaccination should be taken",
              "type": "number"
            }
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive",
            "Blocked"
          ]
        }
      }
    },
    "CreateMedicineRequestSchedule": {
      "type": "object",
      "properties": {
        "repeatInterval": {
          "description": "Number of times the vaccination should be taken.",
          "type": "number"
        },
        "repeatTimes": {
          "description": "How many times vaccination should be taken",
          "type": "number"
        }
      }
    },
    "ProgramRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "logoURL": {
          "type": "string"
        },
        "medicineIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    }
  },
  "securityDefinitions": {
    "hasRole": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "tokenUrl": "https://dumy.oauth.net/token",
      "scopes": {
        "admin": "scope of super admin",
        "facilityAdmin": "scope of facility admin"
      }
    },
    "isAdmin": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "isFacilityAdmin": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "isUser": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "hasRole": [
        "admin"
      ]
    }
  ]
}`))
}
